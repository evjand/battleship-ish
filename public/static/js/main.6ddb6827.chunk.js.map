{"version":3,"sources":["context/userContext.ts","firebaseApp.ts","components/UI/RaisedButton.tsx","components/UI/IconButton.tsx","components/FriendRequests.tsx","components/GameChallenges.tsx","components/Header.tsx","FirebaseMatchmakingManager.ts","pages/Game.tsx","components/AddFriends.tsx","components/FriendList.tsx","components/GameList.tsx","pages/Home.tsx","pages/Login.tsx","App.tsx","theme.ts","index.tsx"],"names":["UserContext","React","createContext","user","displayName","friendCode","app","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","functions","RaisedButton","children","variantColor","isDisabled","props","splitColor","split","colorGrade","parseInt","color","PseudoBox","as","d","bg","py","pb","px","alignItems","borderRadius","borderBottomColor","Math","min","borderBottomWidth","transition","outline","aria-disabled","_hover","backgroundColor","_focus","boxShadow","_active","mt","_disabled","opacity","cursor","IconButton","p","FriendRequests","useContext","friendsReqRef","useRef","useState","friendsReq","setFriendsReq","useEffect","unsubFriendsReq","collection","doc","uid","onSnapshot","query","docChanges","forEach","change","type","data","id","current","map","game","filter","acceptFriendRequest","userId","a","func","httpsCallable","console","error","Popover","Box","w","h","mr","pos","src","alt","length","display","justifyContent","fontSize","fontWeight","top","right","zIndex","maxW","borderColor","List","friendReq","key","borderBottom","Text","whiteSpace","Flex","onClick","textShadow","GameChallenges","challengesRef","challenges","setChallenges","unsubChallenges","challenge","acceptChallenge","Header","onStopMatchmaking","onStartMatchmaking","isMatchmaking","time","align","justify","to","Menu","Avatar","size","name","undefined","signOut","FirebaseMatchmakingManager","matchmakingListener","joinQueue","set","created","FieldValue","serverTimestamp","exitQueue","delete","subMatchmaking","success","includeMetadataChanges","unsubMatchmaking","xy","Array","from","Game","toast","useToast","gameId","useParams","setGame","placement","setPlacement","isTrying","setIsTrying","showOwnBoard","setShowOwnBoard","unsubGames","snapshot","trySquare","square","currentPlayer","title","description","status","duration","isClosable","trySquareFunc","response","isHit","gameIsWon","confirmPlacement","update","hasPlaced","players","opponent","find","player","log","direction","winner","Heading","state","textAlign","margin","mb","hits","transform","opponentName","Grid","gridTemplateColumns","border","yArray","xIndex","checked","yIndex","paddingTop","includes","tries","Button","places","AddFriends","searchQuery","setSearchQuery","foundUser","setFoundUser","searchForUsers","sendFriendRequest","get","publicUserSnapshot","exists","publicUser","onClose","Input","placeholder","_placeholder","value","onChange","event","target","Modal","isOpen","FriendList","friendsRef","friends","setFriends","unsubFriends","sendChallenge","friend","GameList","gamesRef","games","setGames","Home","templateColumns","gridGap","rounded","letterSpacing","Login","email","setEmail","password","setPassword","formError","setFormError","isLoggingIn","setIsLoggingIn","handleSubmit","preventDefault","signInWithEmailAndPassword","signInAnonymously","minH","onSubmit","FormControl","isInvalid","FormLabel","htmlFor","FormErrorMessage","message","isLoading","variant","matchmakingManager","App","setUser","timerRef","history","useHistory","setTime","setIsMatchmaking","initialLoad","setInitialLoad","startMatchmaking","startTimer","stopMatchmaking","push","setInterval","clearInterval","stopTimer","unsubAuth","onAuthStateChanged","userData","setUserData","unsubUserdata","overflow","Spinner","position","left","Provider","background","path","customTheme","theme","fonts","heading","body","mono","ReactDOM","render","StrictMode","ThemeProvider","ColorModeProvider","CSSReset","document","getElementById"],"mappings":"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","file":"static/js/main.6ddb6827.chunk.js","sourcesContent":["import React from 'react'\nimport * as firebase from 'firebase'\n\nconst UserContext = React.createContext<{ user: firebase.User | null; displayName: string; friendCode: string }>({\n  user: null,\n  displayName: '',\n  friendCode: '',\n})\nexport default UserContext\n","// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport * as firebase from 'firebase/app'\n\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\n//import \"firebase/analytics\";\n\n// Add the Firebase products that you want to use\nimport 'firebase/auth'\nimport 'firebase/firestore'\nimport 'firebase/functions'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDlxImm5-7T7AzdMAbJO-86ijR1c5g6vDM',\n  authDomain: 'battleship-ish.firebaseapp.com',\n  databaseURL: 'https://battleship-ish.firebaseio.com',\n  projectId: 'battleship-ish',\n  storageBucket: 'battleship-ish.appspot.com',\n  messagingSenderId: '57723460313',\n  appId: '1:57723460313:web:f55fa72d03e38eea77bcc8',\n}\n// Initialize Firebase\nconst app = firebase.initializeApp(firebaseConfig)\n\nconst auth = app.auth()\nconst firestore = app.firestore()\nconst functions = app.functions('europe-west1')\n\nexport { auth, firestore, functions }\n","import React from 'react'\nimport { PseudoBox, PseudoBoxProps, ButtonProps } from '@chakra-ui/core'\n\ninterface RaisedButtonProps {\n  variantColor?: string\n}\n\nconst RaisedButton: React.FC<PseudoBoxProps & ButtonProps & RaisedButtonProps> = ({\n  children,\n  variantColor = 'purple.400',\n  isDisabled,\n  ...props\n}) => {\n  const splitColor = variantColor.split('.')\n  const colorGrade = parseInt(splitColor[1], 10)\n  const color = splitColor[0]\n  return (\n    <PseudoBox\n      as=\"button\"\n      d=\"flex\"\n      bg={variantColor}\n      py={2}\n      pb={1}\n      px={4}\n      alignItems=\"center\"\n      borderRadius={6}\n      borderBottomColor={`${color}.${Math.min(colorGrade + 100, 900)}`}\n      borderBottomWidth={4}\n      transition=\"all 0.2s ease\"\n      outline=\"none\"\n      aria-disabled={isDisabled}\n      _hover={{\n        backgroundColor: `${color}.${Math.min(colorGrade + 100, 900)}`,\n        borderBottomColor: `${color}.${Math.min(colorGrade + 200, 900)}`,\n      }}\n      _focus={{\n        boxShadow: 'outline',\n      }}\n      _active={{\n        borderBottomWidth: '2px',\n        mt: '2px',\n      }}\n      _disabled={{\n        opacity: 0.5,\n        cursor: 'not-allowed',\n      }}\n      {...props}\n    >\n      {children}\n    </PseudoBox>\n  )\n}\n\nexport default RaisedButton\n","import React from 'react'\nimport { PseudoBox, PseudoBoxProps } from '@chakra-ui/core'\n\ninterface IconButton {\n  variantColor?: string\n}\n\nconst IconButton: React.FC<PseudoBoxProps & IconButton> = ({ children, variantColor = 'purple.300', ...props }) => {\n  const splitColor = variantColor.split('.')\n  const colorGrade = parseInt(splitColor[1], 10)\n  const color = splitColor[0]\n  return (\n    <PseudoBox\n      as=\"button\"\n      d=\"flex\"\n      bg={variantColor}\n      p={2}\n      alignItems=\"center\"\n      borderRadius={6}\n      borderBottomColor={`${color}.${Math.min(colorGrade + 100, 900)}`}\n      borderBottomWidth={4}\n      transition=\"all 0.2s ease\"\n      outline=\"none\"\n      _hover={{\n        backgroundColor: `${color}.${Math.min(colorGrade + 100, 900)}`,\n        borderBottomColor: `${color}.${Math.min(colorGrade + 200, 900)}`,\n      }}\n      _focus={{\n        boxShadow: 'outline',\n      }}\n      _active={{\n        borderBottomWidth: '2px',\n        mt: '2px',\n      }}\n      {...props}\n    >\n      {children}\n    </PseudoBox>\n  )\n}\n\nexport default IconButton\n","import React, { useContext, useRef, useState, useEffect } from 'react'\nimport UserContext from '../context/userContext'\nimport { firestore, functions } from '../firebaseApp'\nimport { List, ListItem, Text, Button, Box, Flex } from '@chakra-ui/core'\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n} from '@chakra-ui/core'\nimport RaisedButton from './UI/RaisedButton'\nimport IconButton from './UI/IconButton'\n\nconst FriendRequests = () => {\n  const { user } = useContext(UserContext)\n  const friendsReqRef = useRef<any[]>([])\n  const [friendsReq, setFriendsReq] = useState<any[]>([])\n\n  useEffect(() => {\n    if (!user) return\n\n    const unsubFriendsReq = firestore\n      .collection('users')\n      .doc(user?.uid)\n      .collection('friend-requests')\n      .onSnapshot((query) => {\n        query.docChanges().forEach((change) => {\n          const doc = change.doc\n          if (change.type === 'added') {\n            const data = { ...doc.data(), id: doc.id }\n            friendsReqRef.current = [...friendsReqRef.current, data]\n          }\n          if (change.type === 'modified') {\n            const id = doc.id\n            friendsReqRef.current = friendsReqRef.current.map((game) => {\n              if (game.id !== id) return game\n              return { ...doc.data(), id: doc.id }\n            })\n          }\n          if (change.type === 'removed') {\n            const id = doc.id\n            friendsReqRef.current = friendsReqRef.current.filter((game) => game.id !== id)\n          }\n        })\n        setFriendsReq(friendsReqRef.current)\n      })\n\n    return () => {\n      unsubFriendsReq()\n    }\n  }, [user])\n\n  const acceptFriendRequest = async (userId: string) => {\n    try {\n      const func = functions.httpsCallable('acceptFriendRequest')\n      await func({ userId })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Box as=\"button\" w=\"32px\" h=\"32px\" mr={4} pos=\"relative\">\n          <img src=\"/icons/users.svg\" alt=\"\" />\n          {friendsReq.length > 0 && (\n            <Box\n              pos=\"absolute\"\n              display=\"fled\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              w={5}\n              h={5}\n              borderRadius=\"full\"\n              bg=\"red.500\"\n              color=\"white\"\n              fontSize=\"0.75rem\"\n              fontWeight=\"800\"\n              top=\"-0.5rem\"\n              right=\"-0.5rem\"\n            >\n              {friendsReq.length}\n            </Box>\n          )}\n        </Box>\n      </PopoverTrigger>\n      <PopoverContent zIndex={4} maxW=\"400px\" bg=\"purple.600\" borderColor=\"purple.700\">\n        <PopoverArrow />\n        <PopoverHeader borderColor=\"purple.700\">Friend requests</PopoverHeader>\n        <PopoverBody>\n          <List>\n            {friendsReq.map((friendReq) => {\n              return (\n                <ListItem\n                  d=\"flex\"\n                  p={2}\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                  key={friendReq.id}\n                  borderBottom=\"1px solid\"\n                  borderColor=\"purple.700\"\n                >\n                  <Text whiteSpace=\"nowrap\" mr={4}>\n                    {friendReq.displayName}\n                  </Text>\n                  <Flex>\n                    <RaisedButton mr={2} variantColor=\"green.400\" onClick={() => acceptFriendRequest(friendReq.userId)}>\n                      <Box w=\"32px\" h=\"32px\" mr={2}>\n                        <img src=\"/icons/like.svg\" alt=\"\" />\n                      </Box>\n                      <Text fontSize=\"1.25rem\" fontWeight=\"700\" color=\"white\" textShadow=\"1px 1px 0px rgba(0,0,0,0.2)\">\n                        Accept\n                      </Text>\n                    </RaisedButton>\n                    <IconButton variantColor=\"red.400\">\n                      <Box w=\"32px\" h=\"32px\">\n                        <img src=\"/icons/bad.svg\" alt=\"\" />\n                      </Box>\n                    </IconButton>\n                  </Flex>\n                </ListItem>\n              )\n            })}\n          </List>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\nexport default FriendRequests\n","import React, { useContext, useRef, useState, useEffect } from 'react'\nimport UserContext from '../context/userContext'\nimport { List, Heading, ListItem, Text, Button, Box, Flex } from '@chakra-ui/core'\nimport { functions, firestore } from '../firebaseApp'\nimport {\n  Popover,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  PopoverArrow,\n  PopoverCloseButton,\n} from '@chakra-ui/core'\nimport RaisedButton from './UI/RaisedButton'\nimport IconButton from './UI/IconButton'\nconst GameChallenges = () => {\n  const { user } = useContext(UserContext)\n  const challengesRef = useRef<any[]>([])\n  const [challenges, setChallenges] = useState<any[]>([])\n\n  useEffect(() => {\n    if (!user) return\n\n    const unsubChallenges = firestore\n      .collection('users')\n      .doc(user?.uid)\n      .collection('challenges')\n      .onSnapshot((query) => {\n        query.docChanges().forEach((change) => {\n          const doc = change.doc\n          if (change.type === 'added') {\n            const data = { ...doc.data(), id: doc.id }\n            challengesRef.current = [...challengesRef.current, data]\n          }\n          if (change.type === 'modified') {\n            const id = doc.id\n            challengesRef.current = challengesRef.current.map((challenge) => {\n              if (challenge.id !== id) return challenge\n              return { ...doc.data(), id: doc.id }\n            })\n          }\n          if (change.type === 'removed') {\n            const id = doc.id\n            challengesRef.current = challengesRef.current.filter((challenge) => challenge.id !== id)\n          }\n        })\n        setChallenges(challengesRef.current)\n      })\n\n    return () => {\n      unsubChallenges()\n    }\n  }, [user])\n\n  const acceptChallenge = async (userId: string) => {\n    try {\n      const func = functions.httpsCallable('acceptChallenge')\n      await func({ userId })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Popover>\n      <PopoverTrigger>\n        <Box as=\"button\" w=\"32px\" h=\"32px\" mr={4} pos=\"relative\">\n          <img src=\"/icons/bell.svg\" alt=\"\" />\n          {challenges.length > 0 && (\n            <Box\n              pos=\"absolute\"\n              display=\"fled\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              w={5}\n              h={5}\n              borderRadius=\"full\"\n              bg=\"red.500\"\n              color=\"white\"\n              fontSize=\"0.75rem\"\n              fontWeight=\"800\"\n              top=\"-0.5rem\"\n              right=\"-0.5rem\"\n            >\n              {challenges.length}\n            </Box>\n          )}\n        </Box>\n      </PopoverTrigger>\n      <PopoverContent zIndex={4} maxW=\"400px\" bg=\"purple.600\" borderColor=\"purple.700\">\n        <PopoverArrow />\n        <PopoverHeader borderColor=\"purple.700\">Game challenges</PopoverHeader>\n        <PopoverBody>\n          <List>\n            {challenges.map((challenge) => {\n              return (\n                <ListItem\n                  d=\"flex\"\n                  p={2}\n                  alignItems=\"center\"\n                  justifyContent=\"space-between\"\n                  key={challenge.id}\n                  borderBottom=\"1px solid\"\n                  borderColor=\"purple.700\"\n                >\n                  <Text whiteSpace=\"nowrap\" mr={4}>\n                    {challenge.displayName}\n                  </Text>\n                  <Flex>\n                    <RaisedButton mr={2} variantColor=\"green.400\" onClick={() => acceptChallenge(challenge.userId)}>\n                      <Box w=\"32px\" h=\"32px\" mr={2}>\n                        <img src=\"/icons/like.svg\" alt=\"\" />\n                      </Box>\n                      <Text fontSize=\"1.25rem\" fontWeight=\"700\" color=\"white\" textShadow=\"1px 1px 0px rgba(0,0,0,0.2)\">\n                        Accept\n                      </Text>\n                    </RaisedButton>\n                    <IconButton variantColor=\"red.400\">\n                      <Box w=\"32px\" h=\"32px\">\n                        <img src=\"/icons/bad.svg\" alt=\"\" />\n                      </Box>\n                    </IconButton>\n                  </Flex>\n                </ListItem>\n              )\n            })}\n          </List>\n        </PopoverBody>\n      </PopoverContent>\n    </Popover>\n  )\n}\n\nexport default GameChallenges\n","import React, { FC, useContext } from 'react'\nimport { Box, Button, Flex, Avatar, Text } from '@chakra-ui/core'\nimport { Link } from 'react-router-dom'\nimport UserContext from '../context/userContext'\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  MenuGroup,\n  MenuDivider,\n  MenuOptionGroup,\n  MenuItemOption,\n} from '@chakra-ui/core'\nimport IconButton from './UI/IconButton'\nimport { auth } from '../firebaseApp'\nimport FriendRequests from './FriendRequests'\nimport GameChallenges from './GameChallenges'\nimport RaisedButton from './UI/RaisedButton'\n\nexport interface HeaderProps {\n  onStartMatchmaking: () => void\n  onStopMatchmaking: () => void\n  isMatchmaking: boolean\n  time: number\n}\n\nconst Header: FC<HeaderProps> = ({ onStopMatchmaking, onStartMatchmaking, isMatchmaking, time }) => {\n  const { user } = useContext(UserContext)\n\n  const signOut = () => {\n    auth.signOut()\n  }\n\n  return (\n    <Flex\n      px={4}\n      align=\"center\"\n      justify=\"space-between\"\n      bg=\"purple.800\"\n      borderBottomWidth=\"2px\"\n      borderBottomColor=\"purple.900\"\n      w=\"100%\"\n      h=\"5rem\"\n    >\n      <Link to=\"/\">Bombergrid</Link>\n      {!isMatchmaking ? (\n        <RaisedButton variantColor=\"teal.400\" onClick={onStartMatchmaking}>\n          <Text fontSize=\"1.25rem\" fontWeight=\"700\" color=\"white\" textShadow=\"1px 1px 0px rgba(0,0,0,0.2)\">\n            Search for opponent\n          </Text>\n        </RaisedButton>\n      ) : (\n        <RaisedButton variantColor=\"teal.400\" onClick={onStopMatchmaking}>\n          <Text fontSize=\"1.25rem\" fontWeight=\"700\" color=\"white\" textShadow=\"1px 1px 0px rgba(0,0,0,0.2)\">\n            Searching for opponent ... {time}\n          </Text>\n        </RaisedButton>\n      )}\n      <Flex>\n        <FriendRequests />\n        <GameChallenges />\n        <Menu>\n          <MenuButton>\n            <Avatar size=\"sm\" name={user?.displayName ?? undefined} />\n          </MenuButton>\n          <MenuList>\n            <MenuItem onClick={signOut}>Sign out</MenuItem>\n          </MenuList>\n        </Menu>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Header\n","import firebase from 'firebase'\nimport { firestore } from './firebaseApp'\n\nclass FirebaseMatchmakingManager {\n  matchmakingListener: (() => void) | null = null\n\n  joinQueue = (uid: string): Promise<void> => {\n    return firestore\n      .collection('matchmaking')\n      .doc(uid)\n      .set({ created: firebase.firestore.FieldValue.serverTimestamp() })\n  }\n\n  exitQueue = (uid: string): Promise<void> => {\n    return firestore.collection('matchmaking').doc(uid).delete()\n  }\n\n  subMatchmaking = (\n    uid: string,\n    success: (snapshot: firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>) => void,\n    error: (error: Error) => void\n  ) => {\n    this.matchmakingListener = firestore\n      .collection('matchmaking')\n      .doc(uid)\n      .onSnapshot({ includeMetadataChanges: false }, success, error)\n  }\n\n  unsubMatchmaking = () => {\n    this.matchmakingListener && this.matchmakingListener()\n  }\n}\n\nexport default FirebaseMatchmakingManager\n","import React, { useContext, useEffect, useState } from 'react'\nimport { firestore, functions } from '../firebaseApp'\nimport UserContext from '../context/userContext'\nimport { useParams } from 'react-router'\nimport { Button, Grid, Box, Flex, Heading, Text, useToast } from '@chakra-ui/core'\nimport RaisedButton from '../components/UI/RaisedButton'\n\nconst xy = Array.from(Array(10)).map(() => Array.from(Array(10)).map(() => false))\n\nconst Game = () => {\n  const { user, displayName } = useContext(UserContext)\n  const toast = useToast()\n  const { gameId } = useParams()\n  const [game, setGame] = useState<firebase.firestore.DocumentData>({})\n  const [placement, setPlacement] = useState<string[]>([])\n  const [isTrying, setIsTrying] = useState<boolean>(false)\n  const [showOwnBoard, setShowOwnBoard] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (!user) return\n\n    const unsubGames = firestore\n      .collection('games')\n      .doc(gameId)\n      .onSnapshot((snapshot) => {\n        setGame(snapshot.data()!)\n      })\n\n    return () => {\n      unsubGames()\n    }\n  }, [user, gameId])\n\n  const addToPlacement = (square: string) => {\n    setPlacement((places) =>\n      places.includes(square)\n        ? places.filter((p) => p !== square)\n        : placement.length < 10\n        ? [...places, square]\n        : places\n    )\n  }\n\n  const trySquare = async (square: string) => {\n    //functions.useFunctionsEmulator('http://localhost:5001')\n    if (game.currentPlayer !== user?.uid || isTrying) {\n      toast({\n        title: 'Not your turn.',\n        description: \"Couldn't fire rocket, its not your turn.\",\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      })\n    } else {\n      const trySquareFunc = functions.httpsCallable('trySquare')\n      try {\n        setIsTrying(true)\n        const response = await trySquareFunc({ square, gameId })\n        const { isHit, gameIsWon } = response.data\n        if (isHit) {\n          toast({\n            title: 'You hit one of the ships',\n            status: 'info',\n            duration: 3000,\n            isClosable: true,\n          })\n        }\n        if (gameIsWon) {\n          toast({\n            title: 'You one the game!!',\n            description: 'Congrats',\n            status: 'success',\n            duration: 3000,\n            isClosable: true,\n          })\n        }\n\n        setIsTrying(false)\n      } catch (error) {\n        console.error(error)\n        setIsTrying(false)\n      }\n    }\n  }\n\n  const confirmPlacement = async () => {\n    if (placement.length !== 10) return\n    try {\n      await firestore\n        .collection('placements')\n        .doc(gameId)\n        .update({\n          [user!.uid]: placement,\n        })\n      const hasPlaced = [...(game.hasPlaced || []), user?.uid]\n      firestore.collection('games').doc(gameId).update({\n        hasPlaced,\n      })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  if (!game.players) return <Text>Loading</Text>\n\n  const opponent = game.players.find((player: string) => player !== user!.uid)\n\n  console.log(game)\n\n  return (\n    <Flex direction=\"column\" justify=\"space-between\">\n      <Flex direction=\"column\" p={2}>\n        {game.winner && <Heading>Winner {game.winner === user?.uid ? 'You won' : 'Your opponent won'}</Heading>}\n        {game.state === 'PLAYING' ? (\n          <>\n            <Heading textAlign=\"center\">{game.currentPlayer === user?.uid ? 'Your' : 'Opponents'} turn</Heading>\n            <Flex justifyContent=\"space-between\" w=\"100%\" maxW=\"550px\" margin=\"0 auto\" mb={2}>\n              <Box>\n                <Text fontSize=\"0.75rem\">{displayName}</Text>\n                {game.hits && (\n                  <Box\n                    borderRadius=\"md\"\n                    d=\"flex\"\n                    w=\"128px\"\n                    h=\"32px\"\n                    bg=\"purple.500\"\n                    justifyContent=\"space-around\"\n                    p={1}\n                    transform=\"skewX(12deg)\"\n                  >\n                    {game.hits[user!.uid].map(() => (\n                      <Box borderRadius=\"sm\" w=\"8px\" bg=\"green.400\"></Box>\n                    ))}\n                    {[...Array.from(Array(10 - game.hits[user!.uid].length))].map(() => (\n                      <Box borderRadius=\"sm\" w=\"8px\" bg=\"purple.400\"></Box>\n                    ))}\n                  </Box>\n                )}\n              </Box>\n              <Box textAlign=\"right\">\n                <Text fontSize=\"0.75rem\">{game.opponentName || game.opponent || 'Opponent'}</Text>\n                {game.hits && (\n                  <Box\n                    d=\"flex\"\n                    w=\"128px\"\n                    h=\"32px\"\n                    borderRadius=\"md\"\n                    bg=\"purple.500\"\n                    justifyContent=\"space-around\"\n                    p={1}\n                    mb={2}\n                    transform=\"skewX(-12deg)\"\n                  >\n                    {game.hits[opponent].map(() => (\n                      <Box borderRadius=\"sm\" w=\"8px\" bg=\"red.400\"></Box>\n                    ))}\n                    {[...Array.from(Array(10 - game.hits[opponent].length))].map(() => (\n                      <Box borderRadius=\"sm\" w=\"8px\" bg=\"purple.400\"></Box>\n                    ))}\n                  </Box>\n                )}\n              </Box>\n            </Flex>\n            {!showOwnBoard ? (\n              <Grid\n                gridTemplateColumns=\"repeat(10, 1fr)\"\n                w=\"100%\"\n                maxW=\"550px\"\n                margin=\"0 auto\"\n                border=\"2px solid\"\n                borderColor=\"blue.200\"\n              >\n                {xy.map((yArray, xIndex) => {\n                  return yArray.map((checked, yIndex) => (\n                    <Button\n                      onClick={() => trySquare(`x${xIndex}y${yIndex}`)}\n                      key={`${xIndex}-${yIndex}`}\n                      isDisabled={game.tries[user!.uid].includes(`x${xIndex}y${yIndex}`)}\n                      border=\"2px solid\"\n                      borderColor=\"blue.200\"\n                      borderRadius=\"none\"\n                      w=\"100%\"\n                      paddingTop=\"100%\"\n                      _hover={{\n                        boxShadow: 'inset 0px 0px 0px 2px red',\n                      }}\n                      _disabled={{\n                        boxShadow: 'none',\n                      }}\n                      _active={{}}\n                      transition=\"none\"\n                      bg={\n                        game.hits[user!.uid].includes(`x${xIndex}y${yIndex}`)\n                          ? 'green.300'\n                          : game.tries[user!.uid].includes(`x${xIndex}y${yIndex}`)\n                          ? 'red.500'\n                          : 'blue.300'\n                      }\n                    >\n                      <Text></Text>\n                    </Button>\n                  ))\n                })}\n              </Grid>\n            ) : (\n              <Grid\n                gridTemplateColumns=\"repeat(10, 1fr)\"\n                w=\"100%\"\n                maxW=\"550px\"\n                margin=\"0 auto\"\n                border=\"2px solid\"\n                borderColor=\"blue.200\"\n              >\n                {xy.map((yArray, xIndex) => {\n                  return yArray.map((checked, yIndex) => (\n                    <Box\n                      key={`${xIndex}-${yIndex}`}\n                      //={() => toggleButtonAt(xIndex, yIndex)}\n                      border=\"2px solid\"\n                      borderColor=\"blue.200\"\n                      w=\"100%\"\n                      paddingTop=\"100%\"\n                      bg={\n                        game.hits[opponent].includes(`x${xIndex}y${yIndex}`)\n                          ? 'red.500'\n                          : game.tries[opponent].includes(`x${xIndex}y${yIndex}`)\n                          ? 'green.300'\n                          : 'blue.300'\n                      }\n                    ></Box>\n                  ))\n                })}\n              </Grid>\n            )}\n            <Flex margin=\"0 auto\" p={8}>\n              <Button mr={2} variantColor=\"teal\" isDisabled={!showOwnBoard} onClick={() => setShowOwnBoard(false)}>\n                Playing board\n              </Button>\n              <Button variantColor=\"teal\" isDisabled={showOwnBoard} onClick={() => setShowOwnBoard(true)}>\n                My board\n              </Button>\n            </Flex>\n          </>\n        ) : game.hasPlaced && game.hasPlaced.includes(user?.uid) ? (\n          <Heading>Waiting for opponent to place their ships</Heading>\n        ) : (\n          <>\n            <Heading py={4}>Select 10 squares to place ships on</Heading>\n            <Grid\n              gridTemplateColumns=\"repeat(10, 1fr)\"\n              w=\"100%\"\n              maxW=\"550px\"\n              margin=\"0 auto\"\n              border=\"2px solid\"\n              borderColor=\"blue.200\"\n            >\n              {xy.map((yArray, xIndex) => {\n                return yArray.map((checked, yIndex) => (\n                  <Box\n                    as=\"button\"\n                    onClick={() => addToPlacement(`x${xIndex}y${yIndex}`)}\n                    key={`${xIndex}-${yIndex}`}\n                    //={() => toggleButtonAt(xIndex, yIndex)}\n                    outline=\"none\"\n                    border=\"2px solid\"\n                    borderColor=\"blue.200\"\n                    w=\"100%\"\n                    paddingTop=\"100%\"\n                    bg={placement.includes(`x${xIndex}y${yIndex}`) ? 'green.300' : 'blue.300'}\n                  ></Box>\n                ))\n              })}\n            </Grid>\n            <Box p={8}>\n              <RaisedButton\n                w=\"100%\"\n                justifyContent=\"center\"\n                isDisabled={placement.length !== 10}\n                onClick={() => confirmPlacement()}\n              >\n                <Text fontSize=\"1.25rem\" fontWeight=\"700\" color=\"white\" textShadow=\"1px 1px 0px rgba(0,0,0,0.2)\">\n                  {placement.length !== 10 ? `${10 - placement.length} squares left` : 'Submit placement'}\n                </Text>\n              </RaisedButton>\n            </Box>\n          </>\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Game\n","import React, { useState, useEffect } from 'react'\nimport { Input, Text, Box, Button } from '@chakra-ui/core'\nimport { firestore, functions } from '../firebaseApp'\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n} from '@chakra-ui/core'\n\ninterface PublicUser {\n  displayName: string\n  userId: string\n}\n\nconst AddFriends = () => {\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [foundUser, setFoundUser] = useState<PublicUser | undefined>()\n\n  useEffect(() => {\n    if (searchQuery.length < 3) return\n\n    searchForUsers(searchQuery)\n  }, [searchQuery])\n\n  const sendFriendRequest = async (userId: string) => {\n    try {\n      const func = functions.httpsCallable('sendFriendRequest')\n      await func({ userId })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const searchForUsers = async (query: string) => {\n    try {\n      const publicUserSnapshot = await firestore.collection('public-users').doc(query).get()\n      if (!publicUserSnapshot.exists) {\n        setFoundUser(undefined)\n        console.log('No user found')\n        return\n      }\n      const publicUser: PublicUser = publicUserSnapshot.data() as PublicUser\n      console.log(publicUser)\n      setFoundUser(publicUser)\n    } catch (error) {\n      console.log('Error, No user found')\n      setFoundUser(undefined)\n    }\n  }\n\n  const onClose = () => {\n    setFoundUser(undefined)\n    setSearchQuery('')\n  }\n\n  return (\n    <>\n      <Input\n        bg=\"purple.400\"\n        color=\"purple.900\"\n        h=\"52px\"\n        border=\"none\"\n        placeholder=\"Friend Code\"\n        _placeholder={{\n          color: 'purple.700',\n        }}\n        value={searchQuery}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => setSearchQuery(event.target.value)}\n      />\n      <Modal isOpen={!!foundUser} onClose={onClose}>\n        <ModalOverlay />\n        {foundUser && (\n          <ModalContent>\n            <ModalHeader>{foundUser.displayName}</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody></ModalBody>\n\n            <ModalFooter>\n              <Button variantColor=\"blue\" mr={3} onClick={onClose}>\n                Close\n              </Button>\n              <Button variantColor=\"green\" onClick={() => sendFriendRequest(foundUser.userId)}>\n                Add friend\n              </Button>\n            </ModalFooter>\n          </ModalContent>\n        )}\n      </Modal>\n    </>\n  )\n}\n\nexport default AddFriends\n","import React, { useRef, useState, useContext, useEffect } from 'react'\nimport UserContext from '../context/userContext'\nimport { firestore, functions } from '../firebaseApp'\nimport { List, ListItem, Text, Button, Image, Box, PseudoBox } from '@chakra-ui/core'\nimport RaisedButton from './UI/RaisedButton'\n\nconst FriendList = () => {\n  const { user } = useContext(UserContext)\n  const friendsRef = useRef<any[]>([])\n  const [friends, setFriends] = useState<any[]>([])\n\n  useEffect(() => {\n    if (!user) return\n\n    const unsubFriends = firestore\n      .collection('users')\n      .doc(user?.uid)\n      .collection('friends')\n      .onSnapshot((query) => {\n        query.docChanges().forEach((change) => {\n          const doc = change.doc\n          if (change.type === 'added') {\n            const data = { ...doc.data(), id: doc.id }\n            friendsRef.current = [...friendsRef.current, data]\n          }\n          if (change.type === 'modified') {\n            const id = doc.id\n            friendsRef.current = friendsRef.current.map((game) => {\n              if (game.id !== id) return game\n              return { ...doc.data(), id: doc.id }\n            })\n          }\n          if (change.type === 'removed') {\n            const id = doc.id\n            friendsRef.current = friendsRef.current.filter((game) => game.id !== id)\n          }\n        })\n        setFriends(friendsRef.current)\n      })\n\n    return () => {\n      unsubFriends()\n    }\n  }, [user])\n\n  const sendChallenge = async (userId: string) => {\n    try {\n      const func = functions.httpsCallable('sendChallenge')\n      await func({ userId })\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <List>\n      {friends.map((friend) => {\n        return (\n          <ListItem\n            d=\"flex\"\n            py={4}\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            key={friend.id}\n            borderBottom=\"2px solid\"\n            borderColor=\"purple.700\"\n          >\n            <Text fontSize=\"1.5rem\">{friend.displayName}</Text>\n            <RaisedButton variantColor=\"orange.300\" onClick={() => sendChallenge(friend.userId)}>\n              <Box w=\"32px\" h=\"32px\" mr={2}>\n                <img src=\"/icons/swords.svg\" alt=\"\" />\n              </Box>\n              <Text fontSize=\"1.25rem\" fontWeight=\"700\" color=\"white\" textShadow=\"1px 1px 0px rgba(0,0,0,0.2)\">\n                Challenge\n              </Text>\n            </RaisedButton>\n            {/*<Button size=\"lg\" p={2} onClick={() => sendChallenge(friend.userId)}>\n              <img src=\"/icons/019-swords.svg\" alt=\"\" />\n        </Button>*/}\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\nexport default FriendList\n","import React, { useContext, useRef, useState, useEffect } from 'react'\nimport UserContext from '../context/userContext'\nimport { firestore } from '../firebaseApp'\nimport { List, ListItem, Flex, Button, Text, Box } from '@chakra-ui/core'\nimport { Link } from 'react-router-dom'\nimport RaisedButton from './UI/RaisedButton'\n\nconst GameList = () => {\n  const { user, displayName } = useContext(UserContext)\n  const gamesRef = useRef<any[]>([])\n  const [games, setGames] = useState<any[]>([])\n\n  useEffect(() => {\n    if (!user) return\n\n    const unsubGames = firestore\n      .collection('users')\n      .doc(user?.uid)\n      .collection('games')\n      .onSnapshot((query) => {\n        query.docChanges().forEach((change) => {\n          const doc = change.doc\n          if (change.type === 'added') {\n            const data = { ...doc.data(), id: doc.id }\n            gamesRef.current = [...gamesRef.current, data]\n          }\n          if (change.type === 'modified') {\n            const id = doc.id\n            gamesRef.current = gamesRef.current.map((game) => {\n              if (game.id !== id) return game\n              return { ...doc.data(), id: doc.id }\n            })\n          }\n          if (change.type === 'removed') {\n            const id = doc.id\n            gamesRef.current = gamesRef.current.filter((game) => game.id !== id)\n          }\n        })\n        setGames(gamesRef.current)\n      })\n\n    return () => {\n      unsubGames()\n    }\n  }, [user])\n\n  return (\n    <List>\n      {games.map((game) => {\n        console.log(game)\n        return (\n          <ListItem key={game.id} mb={4} p={4} borderRadius=\"lg\" bg=\"purple.700\">\n            <Flex justifyContent=\"space-between\">\n              <Box>\n                <Text fontSize=\"0.75rem\">{displayName}</Text>\n                {game.hits && (\n                  <Box\n                    borderRadius=\"md\"\n                    d=\"flex\"\n                    w=\"128px\"\n                    h=\"32px\"\n                    bg=\"purple.500\"\n                    justifyContent=\"space-around\"\n                    p={1}\n                    transform=\"skewX(12deg)\"\n                  >\n                    {game.hits[user!.uid].map(() => (\n                      <Box borderRadius=\"sm\" w=\"8px\" bg=\"green.400\"></Box>\n                    ))}\n                    {[...Array.from(Array(10 - game.hits[user!.uid].length))].map(() => (\n                      <Box borderRadius=\"sm\" w=\"8px\" bg=\"purple.400\"></Box>\n                    ))}\n                  </Box>\n                )}\n              </Box>\n              <Box textAlign=\"right\">\n                <Text fontSize=\"0.75rem\">{game.opponentName || game.opponent}</Text>\n                {game.hits && (\n                  <Box\n                    d=\"flex\"\n                    w=\"128px\"\n                    h=\"32px\"\n                    borderRadius=\"md\"\n                    bg=\"purple.500\"\n                    justifyContent=\"space-around\"\n                    p={1}\n                    mb={2}\n                    transform=\"skewX(-12deg)\"\n                  >\n                    {game.hits[game.opponent].map(() => (\n                      <Box borderRadius=\"sm\" w=\"8px\" bg=\"red.400\"></Box>\n                    ))}\n                    {[...Array.from(Array(10 - game.hits[game.opponent].length))].map(() => (\n                      <Box borderRadius=\"sm\" w=\"8px\" bg=\"purple.400\"></Box>\n                    ))}\n                  </Box>\n                )}\n              </Box>\n            </Flex>\n            <Link to={`/game/${game.id}`}>\n              <RaisedButton\n                mt={4}\n                w=\"100%\"\n                justifyContent=\"center\"\n                variantColor={game.currentPlayer === user?.uid ? 'teal.400' : 'purple.400'}\n              >\n                <Text\n                  whiteSpace=\"nowrap\"\n                  fontSize=\"1.25rem\"\n                  fontWeight=\"700\"\n                  color=\"white\"\n                  textShadow=\"1px 1px 0px rgba(0,0,0,0.2)\"\n                >\n                  {game.currentPlayer === user?.uid ? 'Your turn' : 'View game'}\n                </Text>\n              </RaisedButton>\n            </Link>\n          </ListItem>\n        )\n      })}\n    </List>\n  )\n}\n\nexport default GameList\n","import { Box, Grid, Heading } from '@chakra-ui/core'\nimport React, { useContext, useEffect, useState } from 'react'\nimport AddFriends from '../components/AddFriends'\nimport FriendList from '../components/FriendList'\nimport FriendRequests from '../components/FriendRequests'\nimport GameChallenges from '../components/GameChallenges'\nimport GameList from '../components/GameList'\nimport UserContext from '../context/userContext'\nimport { firestore } from '../firebaseApp'\n\nconst Home = () => {\n  const { displayName, friendCode } = useContext(UserContext)\n\n  return (\n    <Grid templateColumns=\"1fr 1fr\" p={8} gridGap={8}>\n      <Box bg=\"purple.800\" p={8} rounded=\"lg\" boxShadow=\"0px 0px 0px 8px #6B46C1\">\n        <GameList />\n      </Box>\n      <Box bg=\"purple.800\" p={8} rounded=\"lg\" boxShadow=\"0px 0px 0px 8px #6B46C1\">\n        <Heading>\n          {displayName} ({friendCode})\n        </Heading>\n        <Heading mt={8} mb={2} size=\"md\" fontWeight=\"900\" textShadow=\"1px 1px 0px rgba(0,0,0,0.4)\" letterSpacing=\"1px\">\n          Friends\n        </Heading>\n        <FriendList />\n        <Heading mt={8} mb={2} size=\"md\" fontWeight=\"900\" textShadow=\"1px 1px 0px rgba(0,0,0,0.4)\" letterSpacing=\"1px\">\n          Add new friends\n        </Heading>\n        <AddFriends />\n      </Box>\n    </Grid>\n  )\n}\n\nexport default Home\n","import React, { useState } from 'react'\nimport { Box, Flex, FormControl, FormLabel, Input, FormErrorMessage, Button } from '@chakra-ui/core'\nimport { auth } from '../firebaseApp'\n\ninterface EmailSigninError {\n  code: string\n  message: string\n}\n\nconst Login = () => {\n  const [email, setEmail] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [formError, setFormError] = useState<EmailSigninError>()\n  const [isLoggingIn, setIsLoggingIn] = useState<boolean>(false)\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n    try {\n      setIsLoggingIn(true)\n      await auth.signInWithEmailAndPassword(email, password)\n      setFormError(undefined)\n      setIsLoggingIn(false)\n    } catch (error) {\n      setFormError(error)\n      setIsLoggingIn(false)\n    }\n  }\n\n  const signInAnonymously = async () => {\n    try {\n      await auth.signInAnonymously()\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex align=\"center\" justify=\"center\" w=\"100%\" minH=\"100vh\">\n      <Flex direction=\"column\">\n        <Box as=\"form\" mb={4} onSubmit={handleSubmit}>\n          <FormControl isInvalid={!!formError}>\n            <FormLabel htmlFor=\"email\">Email</FormLabel>\n            <Input\n              name=\"email\"\n              placeholder=\"E-mail\"\n              value={email}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => setEmail(event.target.value)}\n            />\n            <FormLabel htmlFor=\"password\">Password</FormLabel>\n            <Input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => setPassword(event.target.value)}\n            />\n            <FormErrorMessage>{formError && formError.message}</FormErrorMessage>\n          </FormControl>\n          <Button mt={4} variantColor=\"teal\" isLoading={isLoggingIn} type=\"submit\">\n            Sign in with email/password\n          </Button>\n        </Box>\n        <Button onClick={signInAnonymously} variantColor=\"teal\" variant=\"ghost\">\n          Continue without signing in\n        </Button>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Login\n","import { Box, Spinner } from '@chakra-ui/core'\nimport firebase from 'firebase'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { Route, Switch, useHistory } from 'react-router-dom'\nimport Header from './components/Header'\nimport UserContext from './context/userContext'\nimport { auth, firestore } from './firebaseApp'\nimport FirebaseMatchmakingManager from './FirebaseMatchmakingManager'\nimport Game from './pages/Game'\nimport Home from './pages/Home'\nimport Login from './pages/Login'\n\nconst matchmakingManager = new FirebaseMatchmakingManager()\n\nconst App = () => {\n  const [user, setUser] = useState<firebase.User | null>(null)\n  const timerRef = useRef<NodeJS.Timeout>()\n  const matchmakingListener = useRef<() => void>()\n\n  const history = useHistory()\n\n  const [time, setTime] = useState<number>(0)\n  const [isMatchmaking, setIsMatchmaking] = useState<boolean>(false)\n\n  const [initialLoad, setInitialLoad] = useState<boolean>(true)\n\n  const startMatchmaking = async () => {\n    if (!user) return\n    setIsMatchmaking(true)\n    startTimer()\n    await matchmakingManager.joinQueue(user.uid)\n    matchmakingManager.subMatchmaking(\n      user.uid,\n      (snapshot) => {\n        if (snapshot.data()?.gameId) {\n          stopMatchmaking()\n          history.push(`/game/${snapshot.data()?.gameId}`)\n        }\n      },\n      (error) => {\n        console.error(error)\n      }\n    )\n  }\n\n  const startTimer = () => {\n    timerRef.current = setInterval(() => {\n      setTime((time) => time + 1)\n    }, 1000)\n  }\n\n  const stopTimer = (timerRef: React.MutableRefObject<NodeJS.Timeout | undefined>) => {\n    timerRef.current && clearInterval(timerRef.current)\n  }\n\n  const stopMatchmaking = () => {\n    if (!user) return\n    setIsMatchmaking(false)\n    stopTimer(timerRef)\n    setTime(0)\n    matchmakingListener.current && matchmakingListener.current()\n    matchmakingManager.exitQueue(user.uid)\n  }\n\n  useEffect(() => {\n    const unsubAuth = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        setUser(user)\n      } else {\n        setUser(null)\n        try {\n          //await auth.signInAnonymously()\n        } catch (error) {\n          console.error(error)\n        }\n      }\n      setInitialLoad(false)\n    })\n\n    return () => {\n      unsubAuth()\n      matchmakingManager.unsubMatchmaking()\n    }\n  }, [])\n\n  const [userData, setUserData] = useState<any>({})\n\n  useEffect(() => {\n    if (!user) return\n\n    const unsubUserdata = firestore\n      .collection('users')\n      .doc(user?.uid)\n      .onSnapshot((snapshot) => {\n        if (snapshot.exists) {\n          setUserData(snapshot.data())\n        }\n      })\n\n    return () => {\n      unsubUserdata()\n    }\n  }, [user])\n\n  if (initialLoad)\n    return (\n      <Box as=\"main\" h=\"100vh\" overflow=\"auto\" bg=\"gray.900\" color=\"white\">\n        <Spinner\n          color=\"white\"\n          position=\"absolute\"\n          top=\"50%\"\n          left=\"50%\"\n          transform=\"translate3d(-50%, -50%, 0)\"\n          size=\"xl\"\n        />\n      </Box>\n    )\n\n  if (!user) {\n    return <Login></Login>\n  }\n\n  return (\n    <UserContext.Provider\n      value={{ user, displayName: userData.displayName || '', friendCode: userData.friendCode || '' }}\n    >\n      <Box\n        as=\"main\"\n        h=\"100vh\"\n        overflow=\"auto\"\n        background=\"linear-gradient(152deg, #6B46C1 0%, #553C9A 100%)\"\n        color=\"white\"\n      >\n        <Header\n          onStartMatchmaking={startMatchmaking}\n          onStopMatchmaking={stopMatchmaking}\n          isMatchmaking={isMatchmaking}\n          time={time}\n        ></Header>\n\n        <Switch>\n          <Route path=\"/game/:gameId\">\n            <Game />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Box>\n    </UserContext.Provider>\n  )\n}\n\nexport default App\n","import { theme } from '@chakra-ui/core'\n\n// Let's say you want to add custom colors\nconst customTheme = {\n  ...theme,\n  fonts: {\n    heading: `'Nunito', -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n    body: `'Nunito', -apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n    mono: `SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace`,\n  },\n}\n\nexport default customTheme\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ThemeProvider, CSSReset, ColorModeProvider } from '@chakra-ui/core'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport theme from './theme'\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <ColorModeProvider value=\"light\">\n        <CSSReset />\n        <Router>\n          <App />\n        </Router>\n      </ColorModeProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}